THREE.OrbitControls=function(C,D){this.object=C;this.domElement=(D!==undefined)?D:document;this.enabled=true;this.target=new THREE.Vector3();this.center=this.target;
this.noZoom=false;this.zoomSpeed=1;this.minDistance=0;this.maxDistance=Infinity;this.minZoom=0;this.maxZoom=Infinity;this.noRotate=false;this.rotateSpeed=1;
this.noPan=false;this.keyPanSpeed=7;this.autoRotate=false;this.autoRotateSpeed=2;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.minAzimuthAngle=-Infinity;
this.maxAzimuthAngle=Infinity;this.noKeys=false;this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40};this.mouseButtons={ORBIT:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,PAN:THREE.MOUSE.RIGHT};
var z=this;var c=0.000001;var s=new THREE.Vector2();var o=new THREE.Vector2();var A=new THREE.Vector2();var d=new THREE.Vector2();var p=new THREE.Vector2();
var k=new THREE.Vector2();var G=new THREE.Vector3();var B=new THREE.Vector3();var r=new THREE.Vector2();var b=new THREE.Vector2();var y=new THREE.Vector2();
var n;var M;var x=0;var h=0;var u=1;var j=new THREE.Vector3();var e=new THREE.Vector3();var q=new THREE.Quaternion();var f={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5};
var N=f.NONE;this.target0=this.target.clone();this.position0=this.object.position.clone();this.zoom0=this.object.zoom;var L=new THREE.Quaternion().setFromUnitVectors(C.up,new THREE.Vector3(0,1,0));
var m=L.clone().inverse();var I={type:"change"};var F={type:"start"};var t={type:"end"};this.rotateLeft=function(O){if(O===undefined){O=g();}h-=O;};this.rotateUp=function(O){if(O===undefined){O=g();
}x-=O;};this.panLeft=function(P){var O=this.object.matrix.elements;G.set(O[0],O[1],O[2]);G.multiplyScalar(-P);j.add(G);};this.panUp=function(P){var O=this.object.matrix.elements;
G.set(O[4],O[5],O[6]);G.multiplyScalar(P);j.add(G);};this.pan=function(Q,P){var R=z.domElement===document?z.domElement.body:z.domElement;if(z.object instanceof THREE.PerspectiveCamera){var O=z.object.position;
var T=O.clone().sub(z.target);var S=T.length();S*=Math.tan((z.object.fov/2)*Math.PI/180);z.panLeft(2*Q*S/R.clientHeight);z.panUp(2*P*S/R.clientHeight);
}else{if(z.object instanceof THREE.OrthographicCamera){z.panLeft(Q*(z.object.right-z.object.left)/R.clientWidth);z.panUp(P*(z.object.top-z.object.bottom)/R.clientHeight);
}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.");}}};this.dollyIn=function(O){if(O===undefined){O=v();
}if(z.object instanceof THREE.PerspectiveCamera){u/=O;}else{if(z.object instanceof THREE.OrthographicCamera){z.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom*O));
z.object.updateProjectionMatrix();z.dispatchEvent(I);}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.");
}}};this.dollyOut=function(O){if(O===undefined){O=v();}if(z.object instanceof THREE.PerspectiveCamera){u*=O;}else{if(z.object instanceof THREE.OrthographicCamera){z.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/O));
z.object.updateProjectionMatrix();z.dispatchEvent(I);}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.");
}}};this.update=function(){var P=this.object.position;B.copy(P).sub(this.target);B.applyQuaternion(L);n=Math.atan2(B.x,B.z);M=Math.atan2(Math.sqrt(B.x*B.x+B.z*B.z),B.y);
if(this.autoRotate&&N===f.NONE){this.rotateLeft(g());}n+=h;M+=x;n=Math.max(this.minAzimuthAngle,Math.min(this.maxAzimuthAngle,n));M=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,M));
M=Math.max(c,Math.min(Math.PI-c,M));var O=B.length()*u;O=Math.max(this.minDistance,Math.min(this.maxDistance,O));this.target.add(j);B.x=O*Math.sin(M)*Math.sin(n);
B.y=O*Math.cos(M);B.z=O*Math.sin(M)*Math.cos(n);B.applyQuaternion(m);P.copy(this.target).add(B);this.object.lookAt(this.target);h=0;x=0;u=1;j.set(0,0,0);
if(e.distanceToSquared(this.object.position)>c||8*(1-q.dot(this.object.quaternion))>c){this.dispatchEvent(I);e.copy(this.object.position);q.copy(this.object.quaternion);
}};this.reset=function(){N=f.NONE;this.target.copy(this.target0);this.object.position.copy(this.position0);this.object.zoom=this.zoom0;this.object.updateProjectionMatrix();
this.dispatchEvent(I);this.update();};this.getPolarAngle=function(){return M;};this.getAzimuthalAngle=function(){return n;};function g(){return 2*Math.PI/60/60*z.autoRotateSpeed;
}function v(){return Math.pow(0.95,z.zoomSpeed);}function H(O){if(z.enabled===false){return;}O.preventDefault();if(O.button===z.mouseButtons.ORBIT){if(z.noRotate===true){return;
}N=f.ROTATE;s.set(O.clientX,O.clientY);}else{if(O.button===z.mouseButtons.ZOOM){if(z.noZoom===true){return;}N=f.DOLLY;r.set(O.clientX,O.clientY);}else{if(O.button===z.mouseButtons.PAN){if(z.noPan===true){return;
}N=f.PAN;d.set(O.clientX,O.clientY);}}}if(N!==f.NONE){document.addEventListener("mousemove",a,false);document.addEventListener("mouseup",K,false);z.dispatchEvent(F);
}}function a(P){if(z.enabled===false){return;}P.preventDefault();var O=z.domElement===document?z.domElement.body:z.domElement;if(N===f.ROTATE){if(z.noRotate===true){return;
}o.set(P.clientX,P.clientY);A.subVectors(o,s);z.rotateLeft(2*Math.PI*A.x/O.clientWidth*z.rotateSpeed);z.rotateUp(2*Math.PI*A.y/O.clientHeight*z.rotateSpeed);
s.copy(o);}else{if(N===f.DOLLY){if(z.noZoom===true){return;}b.set(P.clientX,P.clientY);y.subVectors(b,r);if(y.y>0){z.dollyIn();}else{if(y.y<0){z.dollyOut();
}}r.copy(b);}else{if(N===f.PAN){if(z.noPan===true){return;}p.set(P.clientX,P.clientY);k.subVectors(p,d);z.pan(k.x,k.y);d.copy(p);}}}if(N!==f.NONE){z.update();
}}function K(){if(z.enabled===false){return;}document.removeEventListener("mousemove",a,false);document.removeEventListener("mouseup",K,false);z.dispatchEvent(t);
N=f.NONE;}function E(O){if(z.enabled===false||z.noZoom===true||N!==f.NONE){return;}O.preventDefault();O.stopPropagation();var P=0;if(O.wheelDelta!==undefined){P=O.wheelDelta;
}else{if(O.detail!==undefined){P=-O.detail;}}if(P>0){z.dollyOut();}else{if(P<0){z.dollyIn();}}z.update();z.dispatchEvent(F);z.dispatchEvent(t);}function i(O){if(z.enabled===false||z.noKeys===true||z.noPan===true){return;
}switch(O.keyCode){case z.keys.UP:z.pan(0,z.keyPanSpeed);z.update();break;case z.keys.BOTTOM:z.pan(0,-z.keyPanSpeed);z.update();break;case z.keys.LEFT:z.pan(z.keyPanSpeed,0);
z.update();break;case z.keys.RIGHT:z.pan(-z.keyPanSpeed,0);z.update();break;}}function J(Q){if(z.enabled===false){return;}switch(Q.touches.length){case 1:if(z.noRotate===true){return;
}N=f.TOUCH_ROTATE;s.set(Q.touches[0].pageX,Q.touches[0].pageY);break;case 2:if(z.noZoom===true){return;}N=f.TOUCH_DOLLY;var P=Q.touches[0].pageX-Q.touches[1].pageX;
var O=Q.touches[0].pageY-Q.touches[1].pageY;var R=Math.sqrt(P*P+O*O);r.set(0,R);break;case 3:if(z.noPan===true){return;}N=f.TOUCH_PAN;d.set(Q.touches[0].pageX,Q.touches[0].pageY);
break;default:N=f.NONE;}if(N!==f.NONE){z.dispatchEvent(F);}}function l(R){if(z.enabled===false){return;}R.preventDefault();R.stopPropagation();var Q=z.domElement===document?z.domElement.body:z.domElement;
switch(R.touches.length){case 1:if(z.noRotate===true){return;}if(N!==f.TOUCH_ROTATE){return;}o.set(R.touches[0].pageX,R.touches[0].pageY);A.subVectors(o,s);
z.rotateLeft(2*Math.PI*A.x/Q.clientWidth*z.rotateSpeed);z.rotateUp(2*Math.PI*A.y/Q.clientHeight*z.rotateSpeed);s.copy(o);z.update();break;case 2:if(z.noZoom===true){return;
}if(N!==f.TOUCH_DOLLY){return;}var P=R.touches[0].pageX-R.touches[1].pageX;var O=R.touches[0].pageY-R.touches[1].pageY;var S=Math.sqrt(P*P+O*O);b.set(0,S);
y.subVectors(b,r);if(y.y>0){z.dollyOut();}else{if(y.y<0){z.dollyIn();}}r.copy(b);z.update();break;case 3:if(z.noPan===true){return;}if(N!==f.TOUCH_PAN){return;
}p.set(R.touches[0].pageX,R.touches[0].pageY);k.subVectors(p,d);z.pan(k.x,k.y);d.copy(p);z.update();break;default:N=f.NONE;}}function w(){if(z.enabled===false){return;
}z.dispatchEvent(t);N=f.NONE;}this.domElement.addEventListener("contextmenu",function(O){O.preventDefault();},false);this.domElement.addEventListener("mousedown",H,false);
this.domElement.addEventListener("mousewheel",E,false);this.domElement.addEventListener("DOMMouseScroll",E,false);this.domElement.addEventListener("touchstart",J,false);
this.domElement.addEventListener("touchend",w,false);this.domElement.addEventListener("touchmove",l,false);window.addEventListener("keydown",i,false);this.update();
};THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype);THREE.OrbitControls.prototype.constructor=THREE.OrbitControls;